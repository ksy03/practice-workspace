{
  "version": 3,
  "sources": ["../../../node_modules/.pnpm/chart.js@3.9.1/node_modules/chart.js/dist/chunks/helpers.segment.mjs", "../../../node_modules/.pnpm/chart.js@3.9.1/node_modules/chart.js/dist/chart.mjs", "../src/js-components/chart/chart.ts", "../src/js-components/chart/pie-chart.ts", "../src/js-components/chart/line-chart.ts"],
  "sourcesContent": ["/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst keyResolvers = {\n  '': v => v,\n  x: o => o.x,\n  y: o => o.y\n};\nfunction resolveObjectKey(obj, key) {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\nfunction _getKeyResolver(key) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\nfunction _splitKey(key) {\n  const parts = key.split('.');\n  const keys = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value, last) =>\n  _lookup(table, value, last\n    ? index => table[index][key] <= value\n    : index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\nfunction _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _isPointInArea as $, _factorize as A, finiteOrDefault as B, callback as C, _addGrace as D, _limitValue as E, toDegrees as F, _measureText as G, HALF_PI as H, _int16Range as I, _alignPixel as J, toPadding as K, clipArea as L, renderText as M, unclipArea as N, toFont as O, PI as P, each as Q, _toLeftRightCenter as R, _alignStartEnd as S, TAU as T, overrides as U, merge as V, _capitalize as W, getRelativePosition as X, _rlookupByKey as Y, _lookupByKey as Z, _arrayUnique as _, resolve as a, toLineHeight as a$, getAngleFromPoint as a0, getMaximumSize as a1, _getParentNode as a2, readUsedSize as a3, throttled as a4, supportsEventListenerOptions as a5, _isDomSupported as a6, descriptors as a7, isFunction as a8, _attachContext as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, noop as aF, distanceBetweenPoints as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, _longestText as aM, _filterBetween as aN, _lookup as aO, isPatternOrGradient as aP, getHoverColor as aQ, clone$1 as aR, _merger as aS, _mergerIf as aT, _deprecated as aU, _splitKey as aV, toFontString as aW, splineCurve as aX, splineCurveMonotone as aY, getStyle as aZ, fontString as a_, _createResolver as aa, _descriptors as ab, mergeIf as ac, uid as ad, debounce as ae, retinaScale as af, clearCanvas as ag, setsEqual as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, PITAU as b0, INFINITY as b1, RAD_PER_DEG as b2, QUARTER_PI as b3, TWO_THIRDS_PI as b4, _angleDiff as b5, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, log10 as z };\n", "/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n", "import { Chart, Title, Legend, Tooltip } from \"chart.js\";\n\nimport { IRComponent } from '@js-comp/base';\n\nChart.register( Title, Legend, Tooltip );\n\nexport interface IRChartArgs {\n    contextElement: HTMLElement\n    title?: string\n}\n\nexport class IRChart extends IRComponent\n{\n    constructor( { contextElement }: IRChartArgs )\n    {\n        super( { contextElement } );\n    }\n}", "import { Chart, PieController, ArcElement } from \"chart.js\";\n\nimport { IRChart, IRChartArgs } from './chart';\n\nChart.register( PieController, ArcElement );\n\nexport interface IRPieChartData {\n    label: string\n    color: string\n    data: number[]\n}\n\nexport interface IRPieChartArgs extends IRChartArgs {\n    dataSource: IRPieChartData[]\n}\n\nexport class IRPieChart extends IRChart\n{\n    canvas: HTMLCanvasElement;\n    chart: Chart;\n\n    constructor( args: IRPieChartArgs )\n    {\n        super( args );\n\n        const { dataSource, title } = args;\n\n        this.canvas = document.createElement( \"canvas\" );\n        this.contextElement.appendChild( this.canvas );\n        this.addCoreElement( this.canvas );\n\n        this.chart = new Chart( this.canvas, {\n            type: \"pie\",\n            options: {\n                aspectRatio: 1,\n                maintainAspectRatio: false,\n                plugins: {\n                    title: {\n                        display: title !== undefined,\n                        text: title,\n                    },\n                },\n            },\n            data: {\n                labels: dataSource.map( ( x ) => x.label ),\n                datasets: [{\n                    data: dataSource.flatMap( ( x ) => x.data ),\n                    backgroundColor: dataSource.map( ( x ) => x.color ),\n                }],\n            },\n        } );\n\n    }\n}", "import { Chart, LineController, CategoryScale, LinearScale, PointElement, LineElement } from \"chart.js\";\n\nimport { IRChart, IRChartArgs } from './chart';\n\nChart.register( LineController, CategoryScale, LinearScale, PointElement, LineElement );\n\nexport interface IRLineChartData {\n    label: string\n    borderColor: string\n    data: number[],\n    fill: boolean\n    tension: number\n}\n\nexport interface IRLineChartArgs extends IRChartArgs {\n    labels: string[]\n    dataSource: IRLineChartData[]\n}\n\nexport class IRLineChart extends IRChart\n{\n    canvas: HTMLCanvasElement;\n    chart: Chart;\n\n    constructor( args: IRLineChartArgs )\n    {\n        super( args );\n\n        const { dataSource, title, labels } = args;\n\n        this.canvas = document.createElement( \"canvas\" );\n        this.contextElement.appendChild( this.canvas );\n        this.addCoreElement( this.canvas );\n\n        this.chart = new Chart( this.canvas, {\n            type: \"line\",\n            options: {\n                aspectRatio: 1,\n                maintainAspectRatio: false,\n                plugins: {\n                    title: {\n                        display: title !== undefined,\n                        text: title,\n                    },\n                },\n            },\n            data: {\n                labels,\n                datasets: dataSource,\n            },\n        } );\n\n    }\n}"],
  "mappings": "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",
  "names": ["noop", "uid", "id", "isNullOrUndef", "value", "isArray", "type", "isObject", "isNumberFinite", "finiteOrDefault", "defaultValue", "valueOrDefault", "toPercentage", "dimension", "toDimension", "callback", "fn", "args", "thisArg", "each", "loopable", "reverse", "i", "len", "keys", "_elementsEqual", "a0", "a1", "ilen", "v0", "v1", "clone$1", "source", "target", "klen", "k", "isValidKey", "key", "_merger", "options", "tval", "sval", "merge", "sources", "merger", "mergeIf", "_mergerIf", "keyResolvers", "v", "o", "resolveObjectKey", "obj", "key", "_getKeyResolver", "keys", "_splitKey", "k", "parts", "tmp", "part", "_capitalize", "str", "defined", "value", "isFunction", "setsEqual", "a", "b", "item", "_isClickEvent", "e", "PI", "TAU", "PITAU", "INFINITY", "RAD_PER_DEG", "HALF_PI", "QUARTER_PI", "TWO_THIRDS_PI", "log10", "sign", "niceNum", "range", "roundedRange", "almostEquals", "niceRange", "fraction", "_factorize", "result", "sqrt", "i", "isNumber", "n", "x", "y", "epsilon", "almostWhole", "rounded", "_setMinAndMaxByKey", "array", "target", "property", "ilen", "toRadians", "degrees", "toDegrees", "radians", "_decimalPlaces", "isNumberFinite", "p", "getAngleFromPoint", "centrePoint", "anglePoint", "distanceFromXCenter", "distanceFromYCenter", "radialDistanceFromCenter", "angle", "distanceBetweenPoints", "pt1", "pt2", "_angleDiff", "_normalizeAngle", "_angleBetween", "start", "end", "sameAngleIsFullCircle", "s", "angleToStart", "angleToEnd", "startToAngle", "endToAngle", "_limitValue", "min", "max", "_int16Range", "_isBetween", "_lookup", "table", "cmp", "index", "hi", "lo", "mid", "_lookupByKey", "last", "_rlookupByKey", "_filterBetween", "values", "arrayEvents", "listenArrayEvents", "listener", "method", "base", "args", "res", "object", "unlistenArrayEvents", "stub", "listeners", "_arrayUnique", "items", "set", "requestAnimFrame", "callback", "throttled", "fn", "thisArg", "updateFn", "updateArgs", "args", "ticking", "rest", "debounce", "delay", "timeout", "_toLeftRightCenter", "align", "_alignStartEnd", "start", "end", "_textX", "left", "right", "rtl", "_getStartAndCountOfVisiblePoints", "meta", "points", "animationsDisabled", "pointCount", "count", "iScale", "_parsed", "axis", "min", "max", "minDefined", "maxDefined", "_limitValue", "_lookupByKey", "_scaleRangesChanged", "xScale", "yScale", "_scaleRanges", "newRanges", "changed", "atEdge", "t", "elasticIn", "s", "p", "TAU", "elasticOut", "effects", "HALF_PI", "PI", "round", "v", "lim", "l", "h", "p2b", "n2b", "b2n", "n2p", "map$1", "hex", "h1", "b", "h2", "eq", "isShort", "hexParse", "str", "len", "ret", "alpha", "a", "f", "hexString", "HUE_RE", "hsl2rgbn", "n", "k", "hsv2rgbn", "hwb2rgbn", "w", "rgb", "i", "hueValue", "r", "g", "d", "rgb2hsl", "calln", "c", "hsl2rgb", "hwb2rgb", "hsv2rgb", "hue", "hueParse", "m", "p1", "p2", "rotate", "deg", "hslString", "map", "names$1", "unpack", "unpacked", "keys", "tkeys", "j", "ok", "nk", "names", "nameParse", "RGB_RE", "rgbParse", "rgbString", "to", "from", "interpolate", "rgb1", "rgb2", "modHSL", "ratio", "tmp", "clone", "proto", "fromObject", "input", "functionParse", "Color", "type", "obj", "color", "weight", "c1", "c2", "w2", "w1", "val", "index_esm", "isPatternOrGradient", "value", "getHoverColor", "overrides", "descriptors", "getScope$1", "node", "key", "set", "root", "scope", "values", "merge", "Defaults", "_descriptors", "context", "ctx", "options", "name", "targetScope", "targetName", "scopeObject", "targetScopeObject", "privateName", "local", "target", "isObject", "valueOrDefault", "defaults", "toFontString", "font", "isNullOrUndef", "_measureText", "data", "gc", "longest", "string", "textWidth", "_longestText", "arrayOfThings", "cache", "ilen", "jlen", "thing", "nestedThing", "isArray", "gcLen", "_alignPixel", "chart", "pixel", "width", "devicePixelRatio", "halfWidth", "clearCanvas", "canvas", "drawPoint", "x", "y", "drawPointLegend", "xOffset", "yOffset", "size", "cornerRadius", "style", "rotation", "radius", "rad", "RAD_PER_DEG", "TWO_THIRDS_PI", "QUARTER_PI", "_isPointInArea", "point", "area", "margin", "clipArea", "unclipArea", "_steppedLineTo", "previous", "flip", "mode", "midpoint", "_bezierCurveTo", "renderText", "text", "opts", "lines", "stroke", "line", "setRenderOpts", "decorateText", "metrics", "top", "bottom", "yDecoration", "addRoundedRectPath", "rect", "LINE_HEIGHT", "FONT_STYLE", "toLineHeight", "matches", "numberOrZero", "_readValueToProps", "props", "objProps", "read", "prop", "toTRBL", "toTRBLCorners", "toPadding", "toFont", "fallback", "resolve", "inputs", "index", "info", "cacheable", "_addGrace", "minmax", "grace", "beginAtZero", "change", "toDimension", "keepZero", "add", "createContext", "parentContext", "_createResolver", "scopes", "prefixes", "rootScopes", "getTarget", "defined", "_resolve", "_cached", "_resolveWithPrefixes", "getKeysFromAllScopes", "storage", "_attachContext", "proxy", "subProxy", "descriptorDefaults", "receiver", "_resolveWithContext", "_scriptable", "_indexable", "_allKeys", "isFunction", "readKey", "prefix", "_capitalize", "needsSubResolver", "_proxy", "_context", "_subProxy", "_resolveScriptable", "_resolveArray", "_stack", "createSubResolver", "isIndexable", "arr", "item", "resolver", "resolveFallback", "getScope", "parent", "resolveObjectKey", "addScopes", "parentScopes", "parentFallback", "allScopes", "addScopesFromKey", "subGetTarget", "resolveKeysFromAllScopes", "_parseObjectDataRadialScale", "parsed", "EPSILON", "getPoint", "getValueAxis", "indexAxis", "splineCurve", "firstPoint", "middlePoint", "afterPoint", "current", "next", "d01", "distanceBetweenPoints", "d12", "s01", "s12", "fa", "fb", "monotoneAdjust", "deltaK", "mK", "pointsLen", "alphaK", "betaK", "tauK", "squaredMagnitude", "pointCurrent", "pointAfter", "almostEquals", "monotoneCompute", "valueAxis", "delta", "pointBefore", "iPixel", "vPixel", "splineCurveMonotone", "slopeDelta", "sign", "capControlPoint", "pt", "capBezierPoints", "inArea", "inAreaPrev", "inAreaNext", "_updateBezierControlPoints", "loop", "controlPoints", "prev", "_isDomSupported", "_getParentNode", "domNode", "parseMaxStyle", "styleValue", "parentProperty", "valueInPixels", "getComputedStyle", "element", "getStyle", "el", "property", "positions", "getPositionedStyle", "styles", "suffix", "result", "pos", "useOffsetPos", "getCanvasPosition", "e", "touches", "source", "offsetX", "offsetY", "box", "getRelativePosition", "evt", "currentDevicePixelRatio", "borderBox", "paddings", "borders", "height", "getContainerSize", "maxWidth", "maxHeight", "container", "containerStyle", "containerBorder", "containerPadding", "INFINITY", "round1", "getMaximumSize", "bbWidth", "bbHeight", "aspectRatio", "margins", "containerSize", "retinaScale", "forceRatio", "forceStyle", "pixelRatio", "deviceHeight", "deviceWidth", "supportsEventListenerOptions", "passiveSupported", "readUsedSize", "_pointInLine", "_steppedInterpolation", "_bezierInterpolation", "cp1", "cp2", "intlCache", "getNumberFormat", "locale", "cacheKey", "formatter", "formatNumber", "num", "getRightToLeftAdapter", "rectX", "itemWidth", "getLeftToRightAdapter", "_itemWidth", "getRtlAdapter", "overrideTextDirection", "direction", "original", "restoreTextDirection", "propertyFn", "_angleBetween", "_angleDiff", "_normalizeAngle", "_isBetween", "normalizeSegment", "getSegment", "segment", "bounds", "startBound", "endBound", "between", "normalize", "_boundSegment", "compare", "inside", "subStart", "prevValue", "startIsBefore", "endIsBefore", "shouldStart", "shouldStop", "_boundSegments", "segments", "sub", "findStartAndEnd", "spanGaps", "solidSegments", "last", "cur", "_computeSegments", "segmentOptions", "splitByStyles", "completeLoop", "doSplitByStyles", "chartContext", "baseStyle", "readStyle", "datasetIndex", "prevStyle", "addStyle", "st", "dir", "styleChanged", "Animator", "chart", "anims", "date", "type", "callbacks", "numSteps", "fn", "requestAnimFrame", "remaining", "items", "i", "draw", "item", "charts", "event", "cb", "acc", "cur", "animator", "transparent", "interpolators", "from", "to", "factor", "c0", "color", "c1", "Animation", "cfg", "target", "prop", "currentValue", "resolve", "effects", "elapsed", "remain", "duration", "loop", "promises", "res", "rej", "resolved", "method", "numbers", "colors", "defaults", "animationOptions", "name", "v", "Animations", "config", "isObject", "animatedProps", "key", "option", "isArray", "values", "newOptions", "options", "resolveTargetOptions", "animations", "awaitAll", "running", "props", "value", "animation", "properties", "keys", "anim", "scaleClip", "scale", "allowedOverflow", "opts", "reverse", "min", "max", "defaultClip", "xScale", "yScale", "x", "y", "toClip", "r", "b", "l", "getSortedDatasetIndices", "filterVisible", "metasets", "ilen", "applyStack", "stack", "dsIndex", "singleMode", "datasetIndex", "otherValue", "isNumberFinite", "sign", "convertObjectDataToArray", "data", "adata", "isStacked", "meta", "stacked", "getStackKey", "indexScale", "valueScale", "getUserBounds", "minDefined", "maxDefined", "getOrCreateStack", "stacks", "stackKey", "indexValue", "subStack", "getLastIndexInStack", "vScale", "positive", "updateStacks", "controller", "parsed", "iScale", "iAxis", "vAxis", "index", "itemStacks", "getFirstScaleId", "axis", "scales", "createDatasetContext", "parent", "createContext", "createDataContext", "element", "clearStacks", "isDirectUpdateMode", "mode", "cloneIfNotShared", "cached", "shared", "createStack", "canStack", "DatasetController", "dataset", "chooseId", "xid", "valueOrDefault", "yid", "rid", "indexAxis", "iid", "vid", "scaleID", "unlistenArrayEvents", "_data", "listenArrayEvents", "resetNewElements", "stackChanged", "oldStacked", "scopeKeys", "scopes", "start", "count", "_stacked", "sorted", "prev", "isNotInOrderComparedToPrev", "labels", "singleScale", "xAxisKey", "yAxisKey", "resolveObjectKey", "range", "parsedValue", "_parsed", "otherScale", "otherMin", "otherMax", "_skip", "ctx", "elements", "area", "active", "drawActiveElementsOnTop", "context", "elementType", "cache", "cacheKey", "sharing", "defined", "prefixes", "names", "transition", "sharedOptions", "firstOpts", "previouslySharedOptions", "includeOptions", "arg1", "arg2", "numMeta", "numData", "end", "move", "arr", "removed", "args", "newCount", "getAllScaleValues", "visibleMetas", "_arrayUnique", "a", "computeMinSampleSize", "curr", "updateMinAndPrev", "computeFitCategoryTraits", "ruler", "stackCount", "thickness", "size", "ratio", "isNullOrUndef", "computeFlexCategoryTraits", "pixels", "next", "percent", "parseFloatBar", "entry", "startValue", "endValue", "barStart", "barEnd", "parseValue", "parseArrayOrPrimitive", "isFloatBar", "custom", "barSign", "actualBase", "borderProps", "top", "bottom", "setBorderSkipped", "edge", "parseEdge", "swap", "startEnd", "orig", "v1", "v2", "setInflateAmount", "inflateAmount", "BarController", "iAxisKey", "vAxisKey", "obj", "bars", "reset", "base", "horizontal", "vpixels", "ipixels", "last", "dataIndex", "skipNull", "val", "barThickness", "baseValue", "minBarLength", "floating", "length", "head", "startPixel", "endPixel", "halfGrid", "maxBarThickness", "center", "stackIndex", "rects", "BubbleController", "points", "point", "iPixel", "vPixel", "radius", "getRatioAndOffset", "rotation", "circumference", "cutout", "ratioX", "ratioY", "offsetX", "offsetY", "TAU", "startAngle", "endAngle", "startX", "startY", "endX", "endY", "calcMax", "angle", "_angleBetween", "calcMin", "maxX", "maxY", "HALF_PI", "minX", "PI", "minY", "DoughnutController", "getter", "toRadians", "chartArea", "arcs", "spacing", "maxSize", "toPercentage", "chartWeight", "maxWidth", "maxHeight", "maxRadius", "outerRadius", "toDimension", "innerRadius", "radiusLength", "animationOpts", "centerX", "centerY", "animateScale", "arc", "metaData", "total", "formatNumber", "ringWeightOffset", "pointStyle", "label", "style", "e", "legendItem", "legend", "tooltipItem", "dataLabel", "LineController", "line", "_dataset", "animationsDisabled", "_getStartAndCountOfVisiblePoints", "_scaleRangesChanged", "spanGaps", "segment", "maxGapLength", "isNumber", "directUpdate", "prevParsed", "nullData", "border", "firstPoint", "lastPoint", "PolarAreaController", "_parseObjectDataRadialScale", "minSize", "datasetStartAngle", "defaultAngle", "PieController", "RadarController", "pointPosition", "Element", "useFinalPosition", "final", "ret", "formatters", "tickValue", "ticks", "locale", "notation", "delta", "maxTick", "calculateDelta", "logDelta", "log10", "numDecimal", "Ticks", "_ctx", "autoSkip", "tickOpts", "ticksLimit", "determineMaxTicks", "majorIndices", "getMajorIndices", "numMajorIndices", "first", "newTicks", "skipMajors", "calculateSpacing", "avgMajorSpacing", "skip", "offset", "tickLength", "maxScale", "maxChart", "evenMajorSpacing", "getEvenSpacing", "factors", "_factorize", "result", "majorStart", "majorEnd", "len", "diff", "reverseAlign", "align", "offsetFromEdge", "sample", "numItems", "increment", "getPixelForGridLine", "offsetGridLines", "validIndex", "epsilon", "lineValue", "garbageCollect", "caches", "each", "gc", "gcLen", "getTickMarkLength", "getTitleHeight", "fallback", "font", "toFont", "padding", "toPadding", "createScaleContext", "createTickContext", "tick", "titleAlign", "position", "_toLeftRightCenter", "titleArgs", "left", "right", "titleX", "titleY", "height", "width", "_alignStartEnd", "positionAxisID", "Scale", "raw", "_userMin", "_userMax", "_suggestedMin", "_suggestedMax", "finiteOrDefault", "metas", "callback", "margins", "beginAtZero", "grace", "sampleSize", "_addGrace", "samplingEnabled", "reversePixels", "numTicks", "minRotation", "maxRotation", "labelRotation", "tickWidth", "maxLabelDiagonal", "labelSizes", "maxLabelWidth", "maxLabelHeight", "_limitValue", "toDegrees", "titleOpts", "gridOpts", "display", "isHorizontal", "titleHeight", "widest", "highest", "tickPadding", "angleRadians", "cos", "sin", "labelHeight", "labelWidth", "isRotated", "labelsBelowTicks", "offsetLeft", "offsetRight", "paddingLeft", "paddingRight", "paddingTop", "paddingBottom", "widths", "heights", "widestLabelSize", "highestLabelSize", "j", "jlen", "tickFont", "fontString", "lineHeight", "nestedLabel", "_measureText", "valueAt", "idx", "pixel", "decimal", "_int16Range", "_alignPixel", "optionTicks", "rot", "w", "h", "grid", "ticksLength", "tl", "borderOpts", "axisWidth", "axisHalfWidth", "alignBorderValue", "borderValue", "alignedLineValue", "tx1", "ty1", "tx2", "ty2", "x1", "y1", "x2", "y2", "limit", "step", "optsAtIndex", "lineWidth", "lineColor", "borderDash", "borderDashOffset", "tickColor", "tickBorderDash", "tickBorderDashOffset", "crossAlign", "mirror", "tickAndPadding", "hTickAndPadding", "textAlign", "lineCount", "textOffset", "textBaseline", "halfCount", "strokeColor", "strokeWidth", "tickTextAlign", "backdrop", "labelPadding", "backgroundColor", "t", "drawLine", "p1", "p2", "lastLineWidth", "clipArea", "renderText", "unclipArea", "title", "tz", "gz", "axisID", "fontSize", "TypedRegistry", "scope", "override", "proto", "parentScope", "isIChartComponent", "id", "registerDefaults", "overrides", "itemDefaults", "merge", "routeDefaults", "routes", "property", "propertyParts", "sourceName", "sourceScope", "parts", "targetName", "targetScope", "Registry", "typedRegistry", "arg", "reg", "itemReg", "registry", "component", "camelMethod", "_capitalize", "ScatterController", "showLine", "abstract", "DateAdapter", "options", "chartOptions", "value", "format", "timestamp", "amount", "unit", "a", "b", "weekday", "members", "adapters", "binarySearch", "metaset", "axis", "intersect", "controller", "data", "_sorted", "iScale", "lookupMethod", "_rlookupByKey", "_lookupByKey", "el", "range", "start", "end", "evaluateInteractionItems", "chart", "position", "handler", "metasets", "i", "ilen", "index", "lo", "hi", "j", "element", "getDistanceMetricForAxis", "useX", "useY", "pt1", "pt2", "deltaX", "deltaY", "getIntersectItems", "useFinalPosition", "includeInvisible", "items", "datasetIndex", "_isPointInArea", "getNearestRadialItems", "evaluationFunc", "startAngle", "endAngle", "angle", "getAngleFromPoint", "_angleBetween", "getNearestCartesianItems", "distanceMetric", "minDistance", "inRange", "center", "distance", "getNearestItems", "getAxisItems", "rangeMethod", "intersectsItem", "Interaction", "e", "getRelativePosition", "elements", "meta", "STATIC_POSITIONS", "filterByPosition", "array", "v", "filterDynamicPositionByAxis", "sortByWeight", "reverse", "v0", "v1", "wrapBoxes", "boxes", "layoutBoxes", "box", "pos", "stack", "stackWeight", "buildStacks", "layouts", "stacks", "wrap", "_stack", "setLayoutDims", "params", "vBoxMaxWidth", "hBoxMaxHeight", "layout", "fullSize", "factor", "buildLayoutBoxes", "left", "right", "top", "bottom", "centerHorizontal", "centerVertical", "getCombinedMax", "maxPadding", "chartArea", "updateMaxPadding", "boxPadding", "updateDims", "isObject", "newWidth", "newHeight", "widthChanged", "heightChanged", "handleMaxPadding", "updatePos", "change", "getMargins", "horizontal", "marginForPositions", "positions", "margin", "fitBoxes", "refitBoxes", "refit", "changed", "same", "other", "setBoxDims", "width", "height", "placeBoxes", "userPadding", "x", "y", "weight", "defined", "defaults", "item", "layoutItem", "minPadding", "padding", "toPadding", "availableWidth", "availableHeight", "verticalBoxes", "horizontalBoxes", "each", "visibleVerticalBoxCount", "total", "BasePlatform", "canvas", "aspectRatio", "context", "type", "listener", "config", "BasicPlatform", "EXPANDO_KEY", "EVENT_TYPES", "isNullOrEmpty", "initCanvas", "style", "renderHeight", "renderWidth", "displayWidth", "readUsedSize", "displayHeight", "eventListenerOptions", "supportsEventListenerOptions", "addListener", "node", "removeListener", "fromNativeEvent", "event", "nodeListContains", "nodeList", "createAttachObserver", "observer", "entries", "trigger", "entry", "createDetachObserver", "drpListeningCharts", "oldDevicePixelRatio", "onWindowResize", "dpr", "resize", "listenDevicePixelRatioChanges", "unlistenDevicePixelRatioChanges", "createResizeObserver", "container", "_getParentNode", "throttled", "w", "releaseObserver", "createProxyAndListen", "proxy", "args", "DomPlatform", "initial", "prop", "isNullOrUndef", "key", "proxies", "getMaximumSize", "_detectPlatform", "_isDomSupported", "PluginService", "hook", "filter", "descriptors", "result", "descriptor", "plugin", "method", "callback", "all", "valueOrDefault", "plugins", "allPlugins", "createDescriptors", "previousDescriptors", "diff", "localIds", "keys", "registry", "local", "getOpts", "id", "opts", "pluginOpts", "scopes", "getIndexAxis", "datasetDefaults", "getAxisFromDefaultScaleID", "indexAxis", "getDefaultScaleIDFromAxis", "axisFromPosition", "determineAxis", "scaleOptions", "mergeScaleConfig", "chartDefaults", "overrides", "configScales", "chartIndexAxis", "firstIDs", "scales", "scaleConf", "defaultId", "defaultScaleOptions", "mergeIf", "dataset", "defaultID", "scale", "initOptions", "initData", "initConfig", "keyCache", "keysCached", "cachedKeys", "cacheKey", "generate", "addIfFound", "set", "obj", "resolveObjectKey", "Config", "datasetType", "transition", "elementType", "mainScope", "resetCache", "_scopeCache", "cache", "keyLists", "cached", "names", "prefixes", "resolver", "subPrefixes", "getResolver", "needContext", "isFunction", "subResolver", "_attachContext", "descriptorDefaults", "resolverCache", "_createResolver", "p", "hasFunction", "acc", "isScriptable", "isIndexable", "_descriptors", "scriptable", "indexable", "isArray", "version", "KNOWN_POSITIONS", "positionIsHorizontal", "compare2Level", "l1", "l2", "onAnimationsComplete", "animationOptions", "onAnimationProgress", "getCanvas", "instances", "getChart", "c", "moveNumericKeys", "move", "intKey", "determineLastEvent", "lastEvent", "inChartArea", "isClick", "Chart", "userConfig", "initialCanvas", "existingChart", "uid", "debounce", "mode", "animator", "maintainAspectRatio", "_aspectRatio", "retinaScale", "clearCanvas", "newSize", "newRatio", "scalesOptions", "axisOptions", "axisID", "scaleOpts", "updated", "isRadial", "isHorizontal", "scaleType", "scaleClass", "hasUpdated", "numData", "numMeta", "datasets", "newControllers", "ControllerClass", "datasetElementType", "dataElementType", "animsDisabled", "reset", "_active", "_lastEvent", "existingEvents", "newEvents", "setsEqual", "_hiddenIndices", "changes", "count", "_dataChanges", "datasetCount", "makeSet", "idx", "changeSet", "area", "noArea", "layers", "filterVisible", "ctx", "clip", "useClip", "clipArea", "unclipArea", "point", "createContext", "visible", "dataIndex", "anims", "listeners", "platform", "_add", "_remove", "detached", "attached", "enabled", "prefix", "activeElements", "lastActive", "active", "_elementsEqual", "replay", "hoverOptions", "deactivated", "activated", "eventFilter", "_isClickEvent", "invalidatePlugins", "enumerable", "clipArc", "pixelMargin", "outerRadius", "innerRadius", "angleMargin", "HALF_PI", "toRadiusCorners", "_readValueToProps", "parseBorderRadius$1", "arc", "angleDelta", "o", "halfThickness", "innerLimit", "computeOuterLimit", "val", "outerArcLimit", "_limitValue", "rThetaToXY", "r", "theta", "pathArc", "offset", "spacing", "circular", "innerR", "spacingOffset", "alpha", "noSpacingInnerRadius", "noSpacingOuterRadius", "avNogSpacingRadius", "adjustedAngle", "beta", "PI", "angleOffset", "outerStart", "outerEnd", "innerStart", "innerEnd", "outerStartAdjustedRadius", "outerEndAdjustedRadius", "outerStartAdjustedAngle", "outerEndAdjustedAngle", "innerStartAdjustedRadius", "innerEndAdjustedRadius", "innerStartAdjustedAngle", "innerEndAdjustedAngle", "pCenter", "p4", "p8", "outerStartX", "outerStartY", "outerEndX", "outerEndY", "drawArc", "fullCircles", "circumference", "TAU", "drawFullCircleBorders", "inner", "drawBorder", "borderWidth", "borderJoinStyle", "ArcElement", "Element", "cfg", "chartX", "chartY", "rAdjust", "betweenAngles", "withinRadius", "_isBetween", "halfAngle", "halfRadius", "radiusOffset", "setStyle", "lineTo", "previous", "target", "getLineMethod", "_steppedLineTo", "_bezierCurveTo", "pathVars", "points", "segment", "paramsStart", "paramsEnd", "segmentStart", "segmentEnd", "outside", "pathSegment", "line", "loop", "lineMethod", "prev", "fastPathSegment", "avgX", "countX", "prevX", "minY", "maxY", "lastY", "pointIndex", "drawX", "truncX", "_getSegmentMethod", "borderDash", "_getInterpolationMethod", "_steppedInterpolation", "_bezierInterpolation", "_pointInLine", "strokePathWithCache", "path", "strokePathDirect", "segments", "segmentMethod", "usePath2D", "draw", "LineElement", "_updateBezierControlPoints", "_computeSegments", "property", "_boundSegments", "_interpolate", "p1", "p2", "t", "interpolated", "name", "inRange$1", "PointElement", "mouseX", "mouseY", "radius", "drawPoint", "getBarBounds", "bar", "base", "half", "skipOrLimit", "skip", "min", "max", "parseBorderWidth", "maxW", "maxH", "toTRBL", "parseBorderRadius", "enableBorderRadius", "toTRBLCorners", "maxR", "enableBorder", "boundingRects", "bounds", "border", "skipX", "skipY", "hasRadius", "addNormalRectPath", "rect", "inflateRect", "refRect", "h", "BarElement", "inflateAmount", "borderColor", "backgroundColor", "outer", "addRectPath", "addRoundedRectPath", "getBoxSize", "labelOpts", "fontSize", "boxHeight", "boxWidth", "itemsEqual", "a", "b", "Legend", "Element", "config", "maxWidth", "maxHeight", "margins", "legendItems", "callback", "item", "options", "ctx", "labelFont", "toFont", "titleHeight", "itemHeight", "width", "height", "padding", "hitboxes", "lineWidths", "lineHeight", "totalHeight", "row", "top", "legendItem", "i", "itemWidth", "columnSizes", "heightLimit", "totalWidth", "currentColWidth", "currentColHeight", "left", "col", "align", "rtl", "rtlHelper", "getRtlAdapter", "_alignStartEnd", "hitbox", "clipArea", "unclipArea", "opts", "defaultColor", "defaults", "fontColor", "halfFontSize", "cursor", "drawLegendBox", "x", "y", "lineWidth", "valueOrDefault", "drawOptions", "centerX", "centerY", "drawPointLegend", "yBoxTop", "xBoxLeft", "borderRadius", "toTRBLCorners", "v", "addRoundedRectPath", "fillText", "renderText", "isHorizontal", "overrideTextDirection", "textWidth", "textAlign", "realX", "_textX", "restoreTextDirection", "titleOpts", "titleFont", "titlePadding", "toPadding", "position", "topPaddingPlusHalfFontSize", "acc", "size", "_toLeftRightCenter", "hitBox", "lh", "_isBetween", "e", "isListened", "hoveredItem", "previous", "sameItem", "type", "plugin_legend", "chart", "_args", "legend", "layouts", "args", "index", "ci", "datasets", "usePointStyle", "pointStyle", "color", "meta", "style", "borderWidth", "name", "Title", "lineCount", "isArray", "textSize", "pos", "offset", "bottom", "right", "rotation", "titleX", "titleY", "PI", "fontOpts", "createTitle", "title", "plugin_title", "titleBlock", "positioners", "items", "i", "len", "x", "y", "count", "el", "pos", "eventPosition", "minDistance", "nearestElement", "center", "d", "distanceBetweenPoints", "tp", "pushOrConcat", "base", "toPush", "isArray", "splitNewlines", "str", "createTooltipItem", "chart", "item", "element", "datasetIndex", "index", "controller", "label", "value", "getTooltipSize", "tooltip", "options", "ctx", "body", "footer", "title", "boxWidth", "boxHeight", "bodyFont", "toFont", "titleFont", "footerFont", "titleLineCount", "footerLineCount", "bodyLineItemCount", "padding", "toPadding", "height", "width", "combinedBodyLength", "bodyItem", "bodyLineHeight", "widthPadding", "maxLineWidth", "line", "each", "determineYAlign", "size", "doesNotFitWithAlign", "xAlign", "caret", "determineXAlign", "yAlign", "chartWidth", "left", "right", "determineAlignment", "alignX", "alignY", "paddingAndSize", "getBackgroundPoint", "alignment", "caretSize", "caretPadding", "cornerRadius", "topLeft", "topRight", "bottomLeft", "bottomRight", "toTRBLCorners", "_limitValue", "getAlignedX", "align", "getBeforeAfterBodyLines", "callback", "createTooltipContext", "parent", "tooltipItems", "createContext", "overrideCallbacks", "callbacks", "context", "override", "Tooltip", "Element", "config", "cached", "opts", "animations", "Animations", "beforeTitle", "afterTitle", "lines", "bodyItems", "scoped", "beforeFooter", "afterFooter", "active", "data", "labelColors", "labelPointStyles", "labelTextColors", "array", "a", "b", "changed", "replay", "properties", "position", "positionAndSize", "backgroundPoint", "tooltipPoint", "caretPosition", "ptX", "ptY", "x1", "x2", "x3", "y1", "y2", "y3", "pt", "length", "titleSpacing", "rtlHelper", "getRtlAdapter", "labelPointStyle", "boxPadding", "colorX", "rtlColorX", "yOffSet", "colorY", "drawOptions", "centerX", "centerY", "drawPoint", "isObject", "outerX", "innerX", "borderRadius", "v", "addRoundedRectPath", "bodySpacing", "bodyAlign", "displayColors", "xLinePadding", "fillLineOfText", "bodyAlignForCalculation", "textColor", "j", "ilen", "jlen", "tooltipSize", "anims", "animX", "animY", "point", "opacity", "hasTooltipContent", "overrideTextDirection", "restoreTextDirection", "activeElements", "lastActive", "meta", "_elementsEqual", "positionChanged", "e", "inChartArea", "caretX", "caretY", "plugin_tooltip", "_args", "args", "useFinalPosition", "noop", "labels", "labelCount", "tooltipItem", "isNullOrUndef", "name", "addIfString", "labels", "raw", "index", "addedLabels", "findOrAddLabel", "first", "last", "validIndex", "max", "_limitValue", "CategoryScale", "Scale", "cfg", "scaleOptions", "added", "label", "isNullOrUndef", "valueOrDefault", "minDefined", "maxDefined", "min", "offset", "ticks", "value", "pixel", "generateTicks$1", "generationOptions", "dataRange", "bounds", "step", "precision", "count", "maxTicks", "maxDigits", "includeBounds", "unit", "maxSpaces", "rmin", "rmax", "countDefined", "minSpacing", "spacing", "niceNum", "factor", "niceMin", "niceMax", "numSpaces", "almostWhole", "almostEquals", "decimalPlaces", "_decimalPlaces", "j", "relativeLabelSize", "horizontal", "minRotation", "rad", "toRadians", "ratio", "length", "LinearScaleBase", "beginAtZero", "setMin", "v", "setMax", "minSign", "sign", "maxSign", "tickOpts", "maxTicksLimit", "stepSize", "opts", "numericGeneratorOptions", "_setMinAndMaxByKey", "start", "end", "formatNumber", "LinearScale", "isNumberFinite", "tickFont", "Ticks", "isMajor", "tickVal", "log10", "generateTicks", "endExp", "endSignificand", "finiteOrDefault", "exp", "significand", "lastTick", "LogarithmicScale", "m", "decimal", "getTickBackdropHeight", "padding", "toPadding", "defaults", "measureLabelSize", "ctx", "font", "isArray", "_longestText", "determineLimits", "angle", "pos", "size", "fitWithPointLabels", "scale", "orig", "limits", "labelSizes", "valueCount", "pointLabelOpts", "additionalAngle", "PI", "i", "pointPosition", "plFont", "toFont", "textSize", "angleRadians", "_normalizeAngle", "toDegrees", "hLimits", "vLimits", "updateLimits", "buildPointLabelItems", "sin", "cos", "x", "y", "items", "extra", "outerDistance", "pointLabelPosition", "HALF_PI", "yForAngle", "textAlign", "getTextAlignForAngle", "left", "leftForTextAlign", "w", "align", "h", "drawPointLabels", "labelCount", "pointLabels", "optsAtIndex", "top", "right", "bottom", "backdropColor", "borderRadius", "toTRBLCorners", "backdropLeft", "backdropTop", "backdropWidth", "backdropHeight", "addRoundedRectPath", "renderText", "pathRadiusLine", "radius", "circular", "TAU", "drawRadiusLine", "gridLineOpts", "color", "lineWidth", "createPointLabelContext", "parent", "createContext", "RadialLinearScale", "callback", "leftMovement", "rightMovement", "topMovement", "bottomMovement", "angleMultiplier", "startAngle", "scalingFactor", "distance", "scaledDistance", "pointLabel", "distanceFromCenter", "backgroundColor", "angleLines", "grid", "position", "tick", "width", "INTERVALS", "UNITS", "sorter", "a", "b", "parse", "input", "adapter", "parser", "round", "isoWeekday", "isNumber", "determineUnitForAutoTicks", "minUnit", "capacity", "ilen", "interval", "determineUnitForFormatting", "numTicks", "determineMajorUnit", "addTick", "time", "timestamps", "lo", "hi", "_lookup", "timestamp", "setMajorTicks", "map", "majorUnit", "major", "ticksFromTimestamps", "values", "TimeScale", "props", "scaleOpts", "adapters", "mergeIf", "options", "_applyBounds", "arr", "timeOpts", "_filterBetween", "limit", "minor", "weekday", "hasWeekday", "format", "formats", "minorFormat", "majorFormat", "formatter", "offsets", "ticksOpts", "tickLabelWidth", "cosRotation", "sinRotation", "tickFontSize", "exampleTime", "displayFormats", "exampleLabel", "metas", "_arrayUnique", "interpolate", "table", "val", "reverse", "prevSource", "nextSource", "prevTarget", "nextTarget", "_lookupByKey", "span", "TimeSeriesScale", "prev", "curr", "next", "data", "Chart", "plugin_title", "plugin_legend", "plugin_tooltip", "IRChart", "IRComponent", "contextElement", "Chart", "PieController", "ArcElement", "IRPieChart", "IRChart", "args", "dataSource", "title", "x", "Chart", "LineController", "CategoryScale", "LinearScale", "PointElement", "LineElement", "IRLineChart", "IRChart", "args", "dataSource", "title", "labels"]
}
